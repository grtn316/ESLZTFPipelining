name: Platform Deploy To Azure
on:
  workflow_dispatch:
    inputs:
      root_id:
          description: '(Default) Set a custom Name (ID) value for the Enterprise-scale "root" Management Group'
          required: false
          default: 'es'
      subscription_id_overrides:
          description: '(Default) Map Subscriptions to Management Groups'
          required: false
          default: '{}'
      TF_VAR_custom_root_id_custom_landing_zones:
          description: '(Custom) Define Custom Landing Zone Structure'
          required: false
          default: '{}'
    branches:
      - main
jobs:
  deploy-to-azure:
    name: 'Deploy to Azure'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_root_id: ${{ github.event.inputs.root_id }}
      TF_VAR_subscription_id_overrides: ${{ github.event.inputs.subscription_id_overrides }}
      TF_VAR_custom_root_id_custom_landing_zones: ${{ github.event.inputs.TF_VAR_custom_root_id_custom_landing_zones }}
    runs-on: ubuntu-18.04
    environment:
        name: Dev-Platform
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: 'Set Terraform'
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.14.8
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: 'Terraform Init'
        id: init
        working-directory: ./PlatformDeployment
        run: terraform init

      - name: 'Terraform Apply'
        id: apply
        working-directory: ./PlatformDeployment
        run: terraform apply -input=false -auto-approve -refresh=true